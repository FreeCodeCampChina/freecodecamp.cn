{
  "name": "jQuery",
  "order": 5,
  "time": "3 hours",
  "helpRoom": "Help",
  "challenges": [
    {
      "id": "bad87fee1348bd9acdd08826",
      "title": "Learn how Script Tags and Document Ready Work",
      "description": [
        "现在让我们开始学习最流行的JavaScript库jQuery吧，不用担心JavaScript本身，我们稍后会提到它。",
        "在开始学习使用jQuery之前，我们需要加一些代码到HTML文件中。",
        "首先在页面顶端增加一行<code>script</code>元素，然后写上结束符。",
        "浏览器会运行<code>script</code> 里所有的Javascript，包括jQuery。",
        "在你的<code>script</code>里，添加这个方法:<code>$(document).ready(function() {</code>到你的<code>script</code>，接下来用<code>});</code>结束这个方法",
        "接下来我们来学习如何写<code>方法</code>，<code>方法</code>里面的代码会被浏览器加载。",
        "在没有<code>document ready function</code>以前，你的代码会在HTML没有渲染完成就执行，这样会产生bug。"
      ],
      "challengeSeed": [
        "",
        "",
        "<!-- 请把你的代码写在这条注释以上 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/<\\/script\\s*>/g) && code.match(/<script(\\sasync|\\sdefer)*(\\s(charset|src|type)\\s*=\\s*[\"\\']+[^\"\\']*[\"\\']+)*(\\sasync|\\sdefer)*\\s*>/g) && code.match(/<\\/script\\s*>/g).length === code.match(/<script(\\sasync|\\sdefer)*(\\s(charset|src|type)\\s*=\\s*[\"\\']+[^\"\\']*[\"\\']+)*(\\sasync|\\sdefer)*\\s*>/g).length, 'message: 创建一个 <code>script</code> 元素，确保它是有效的，并且有关闭标签。');",
        "assert(code.match(/\\$\\s*?\\(\\s*?document\\)\\.ready\\s*?\\(\\s*?function\\s*?\\(\\s*?\\)\\s*?\\{/g), 'message: 你应该添加 <code>$&#40;document&#41;.ready&#40;function&#40;&#41; {</code> 到 <code>script</code> 元素的开头部分。');",
        "assert(code.match(/\\n*?\\s*?\\}\\s*?\\);/g), 'message: 使用 <code>}&#41;;</code> 来关闭 <code>$&#40;document&#41;.ready&#40;function&#40;&#41; {</code> function。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9bedc08826",
      "title": "Target HTML Elements with Selectors Using jQuery",
      "description": [
        "现在我们已经知道 <code>document ready function</code>的用法了.",
        "现在让我们开始写第一个jQuery语句，所有jQuery方法都是由<code>$</code>开始的，通常称作为 <code>美元符号</code>，或者简称为<code>bling</code>。",
        "jQuery通过<code>选择器</code>来选择一个元素的，然后操作元素做些改变。",
        "举个例子，要让所有的<code>按钮</code>做弹回效果，只要把这段代码写在<code>document ready function</code>里面就可以了。",
        "<code>$(\"button\").addClass(\"animated bounce\");</code>",
        "我们已经在后台为你引入了jQuery库和Animate.css库，这样你就可以在编辑器里直接可以使用这两个库，进而通过jQuery给<code>button</code>元素添加<code>bounce</code>回弹动画效果。"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert($(\"button\").hasClass(\"animated\") && $(\"button\").hasClass(\"bounce\"), 'message: 使用 jQuery 的 <code>addClass&#40&#41</code> function 为你的 <code>button</code> 元素添加 class <code>animated</code> 和 <code>bounce</code>。');",
        "assert(!code.match(/class.*animated/g), 'message: 只用 jQuery 来为元素添加 class。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aedc08826",
      "title": "Target Elements by Class Using jQuery",
      "description": [
        "你看到我们是怎么给所有的<code>按钮</code>做弹回效果了吗？我们用 <code>$(\"button\")</code>来选中按钮，然后用<code>.addClass(\"animated bounce\")</code>给按钮加CSS class。",
        "你只需要用jQuery的<code>.addClass()</code>方法，就可以给元素加class了。",
        "首先，我们来使用<code>$(\".well\")</code>来获取所有class为<code>well</code>的<code>div</code>元素。",
        "仔细想想为什么需要在<code>well</code>前面添加<code>.</code>",
        "然后使用jQuery的<code>.addClass()</code>方法添加2个class：<code>animated</code>、<code>shake</code>。",
        "例如，你可以将下面的代码写在<code>document ready function</code>里：",
        "<code>$(\".text-primary\").addClass(\"animated shake\");</code>",
        "上面的代码给所有class为<code>text-primary</code> 的元素添加shake class。"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"button\").addClass(\"animated bounce\");",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert($(\".well\").hasClass(\"animated\") && $(\".well\").hasClass(\"shake\"), 'message: 使用jQuery的<code>addClass()</code>方法给所有类名中含有<code>well</code>的元素添加 <code>animated shake</code>这两个类.');",
        "assert(!code.match(/class\\.\\*animated/g), 'message: 只能使用jQuery给元素添加类。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aeda08826",
      "title": "Target Elements by ID Using jQuery",
      "description": [
        "你还可以根据id属性来获取元素",
        "首先用<code>$(\"#target3\")</code>来选择id为<code>target3</code>的<code>button</code>元素。",
        "注意，就像CSS一样，在id的名字前加上 <code>#</code>。 ",
        "然后使用jQuery的<code>.addClass()</code>方法来添加 <code>animated</code>和<code>fadeOut</code>class.",
        "例如：下面的代码就是给id为<code>target6</code>的<code>button</code>元素添加fade out效果的：",
        "<code>$(\"#target6\").addClass(\"animated fadeOut\")</code>"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"button\").addClass(\"animated bounce\");",
        "    $(\".well\").addClass(\"animated shake\");",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert($(\"#target3\").hasClass(\"animated\"), 'message: 选择 <code>button</code> 给它的 <code>id</code> 写成 <code>target3</code>。 然后使用 jQuery <code>addClass&#40&#41</code> 给它添加一个 <code>animated</code> class。');",
        "assert(($(\"#target3\").hasClass(\"fadeOut\") || $(\"#target3\").hasClass(\"fadeout\"))  && code.match(/\\$\\(.#target3.\\)/g), 'message: 选中 id <code>target3</code> 然后使用 jQuery <code>addClass&#40&#41</code> 给它添加一个 <code>fadeOut</code> class。');",
        "assert(!code.match(/class.*animated/g), 'message: 只使用 jQuery 来添加这些 class 到元素中。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aeda08726",
      "title": "Delete your jQuery Functions",
      "description": [
        "这些动画效果一开始很cool，但是动画太多就有点喧宾夺主了。",
        "在你的<code>document ready function</code>里删掉那三条语句，只留<code>document ready function</code>。"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"button\").addClass(\"animated bounce\");",
        "    $(\".well\").addClass(\"animated shake\");",
        "    $(\"#target3\").addClass(\"animated fadeOut\");",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(!code.match(/e\"\\);/g) && !code.match(/t\"\\);/g), 'message: 在你的<code>document ready function</code>里删掉那三条语句，只留<code>document ready function</code>。');",
        "assert(code.match(/<script>/g), 'message: 保证你的 <code>script</code> 开头完好无缺。');",
        "assert(code.match(/\\$\\(document\\)\\.ready\\(function\\(\\)\\s?\\{/g), 'message: 保证 <code>$&#40document&#41.ready&#40function&#40&#41 {</code> 的完整性。');",
        "assert(code.match(/\\n\\s+?\\}\\);/g), 'message: 保证 \"document ready function\" 的结尾 <code>&#125;&#41;</code> 的完整性。');",
        "assert(code.match(/<\\/script>/g) && code.match(/<script/g) && code.match(/<\\/script>/g).length === code.match(/<script/g).length, 'message: 保证你的 <code>script</code> 结尾完好无缺。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aed908626",
      "title": "Target the same element with multiple jQuery Selectors",
      "description": [
        "现在你已经了解了3种选择器：元素选择器：<code>$(\"button\")</code>、class选择器：<code>$(\".btn\")</code>、id选择器：<code>$(\"#target1\")</code>。",
        "尽管用<code>.addClass()</code>这种方式就可以加不同的class，不过还是让我们尝试用不同的方式给元素添加class吧。",
        "用上面介绍的jQuery选择器和<code>addClass()</code>方法：",
        "给所有type为<code>button</code>的元素添加<code>animated</code> class。",
        "给所有class为<code>.btn</code>的按钮添加<code>shake</code> class。",
        "给所有id为<code>#target1</code>的按钮添加<code>btn-primary</code> class。"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/\\$\\s*?\\(\\s*?(?:'|\")\\s*?button\\s*?(?:'|\")/gi), 'message: 使用 <code>$&#40\"button\"&#41</code> 选择器。');",
        "assert(code.match(/\\$\\s*?\\(\\s*?(?:'|\")\\s*?\\.btn\\s*?(?:'|\")/gi), 'message: 使用 <code>$&#40\".btn\"&#41</code> 选择器。');",
        "assert(code.match(/\\$\\s*?\\(\\s*?(?:'|\")\\s*?#target1\\s*?(?:'|\")/gi), 'message: 使用 <code>$&#40\"#target1\"&#41</code> 选择器。');",
        "assert(code.match(/addClass/g) && code.match(/addClass\\(\\s*?('|\")[\\w-]+\\1\\s*?\\)/g).length > 2, 'message: 在每个选择器中只添加一个 class。');",
        "assert($(\"#target1\").hasClass(\"animated\") && $(\"#target1\").hasClass(\"shake\") && $(\"#target1\").hasClass(\"btn-primary\"), 'message: 你的 <code>#target1</code> 元素应该有class <code>animated</code>&#130; <code>shake</code> 和 <code>btn-primary</code>。');",
        "assert(!code.match(/class.*animated/g), 'message: 只使用 jQuery来添加这些class到元素中。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aed918626",
      "title": "Remove classes from an element with jQuery",
      "description": [
        "你可以通过jQuery的<code>addClass()</code>方法给元素添加class,也可以通过jQuery<code>removeClass()</code>方法去掉元素上的class。",
        "像下面这样：",
        "<code>$(\"#target2\").removeClass(\"btn-default\");</code>",
        "<code>$(\"#target2\").removeClass(\"btn-default\");</code>",
        "来尝试把所有<code>button</code>元素上的<code>btn-default</code> class移除掉。 "
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"button\").addClass(\"animated bounce\");",
        "    $(\".well\").addClass(\"animated shake\");",
        "    $(\"#target3\").addClass(\"animated fadeOut\");",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert($(\".btn-default\").length === 0, 'message: 在 <code>button</code> 元素上移除 <code>btn-default</code> class。');",
        "assert(code.match(/btn btn-default/g), 'message: 只使用 jQuery 来移除从这个元素移除 class。');",
        "assert(code.match(/\\.[\\v\\s]*removeClass[\\s\\v]*\\([\\s\\v]*('|\")\\s*btn-default\\s*('|\")[\\s\\v]*\\)/gm), 'message: 只移除 <code>btn-default</code> class.');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aed908826",
      "title": "Change the CSS of an Element Using jQuery",
      "description": [
        "我们可以通过jQuery来改变HTML元素的CSS样式。",
        "jQuery有一个叫做<code>.css()</code>的方法能让你改变元素的CSS样式。",
        "我们是这样来把颜色改变成蓝色的:",
        "<code>$(\"#target1\").css(\"color\", \"blue\");</code>",
        "这跟通常的CSS语法有点不同，这里CSS的属性和值是在引号内的，并且用逗号分开。",
        "把你的<code>document ready function</code>清空，",
        "来尝试把<code>target1</code>改变成红色。"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"button\").addClass(\"animated bounce\");",
        "    $(\".well\").addClass(\"animated shake\");",
        "    $(\"#target3\").addClass(\"animated fadeOut\");",
        "    $(\"button\").removeClass(\"btn-default\");",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert($(\"#target1\").css(\"color\") === 'rgb(255, 0, 0)', 'message: 你的 <code>target1</code> 应该是红色。');",
        "assert(!code.match(/class.*animated/g), 'message: 请使用jQuery来实现，而不是原生js。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aed808826",
      "title": "Disable an Element Using jQuery",
      "description": [
        "你还可以用jQuery改变除了CSS以外的属性。比如，你可以让按钮变不可选。",
        "当你把按钮设置成不可选以后，这会让按钮变灰并且不能点击。",
        "jQuery有一个<code>.prop()</code>的方法让你来调整元素的属性.",
        "我们是这样来让按钮不可选的:",
        "<code>$(\"button\").prop(\"disabled\", true);</code>",
        "<code>$(\"button\").prop(\"disabled\", true);</code>",
        "来尝试让 <code>target1</code> 按钮不可选."
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"#target1\").css(\"color\", \"red\");",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert($(\"#target1\") && $(\"#target1\").prop(\"disabled\"), 'message: 禁用你的 <code>target1</code> 按钮。');",
        "assert($(\"#target2\") && !$(\"#target2\").prop(\"disabled\"), 'message: 不要禁用任何其他按钮');",
        "assert(!code.match(/disabled>/g), 'message: 只使用 jQuery 来添加 class 到这些元素。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "564944c91be2204b269d51e3",
      "title": "Change Text Inside an Element Using jQuery",
      "description": [
        "jQuery不仅可以改变元素开始标记和结束标记间的文本，甚至可以改变元素标记本身。",
        "jQuery的<code>.html()</code>方法可以添加HTML标签和文字到元素，而元素之前的内容都会被方法的内容所替换掉。",
        "我们是通过<code>em</code>[emphasize]标签来重写和强调标题文本的：",
        "<code>$(\"h3\").html(\"&#60;em&#62;jQuery Playground&#60;/em&#62;\");</code>",
        "jQuery 还有一个类似的方法叫<code>.text()</code>，它只能改变文本但不能修改标记。换句话说，这个方法只会把传进来的任何东西(包括标记)当成文本来显示。",
        "任务：强调id为<code>target4</code>按钮里的文本。 "
      ],
      "releasedOn": "November 18, 2015",
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"#target1\").css(\"color\", \"red\");",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert.isTrue((/<em>|<i>#target4<\\/em>|<\\/i>/gi).test($(\"#target4\").html()), 'message: 通过增加HTML标签的方式来强调 <code>target4</code>按钮的文本。');",
        "assert($(\"#target4\") && $(\"#target4\").text() === '#target4', 'message: 确保你更换的按钮为 <code>target4</code>。');",
        "assert.isFalse((/<em>|<i>/gi).test($(\"h3\").html()), 'message: 不要更改任何文本。');",
        "assert(code.match(/\\.html\\(/g), 'message: 确保你使用的方法是 <code>.html()</code>，而不是 <code>.text()</code>。');",
        "assert(code.match(/\\$\\(\\s*?(\\\"|\\')#target4(\\\"|\\')\\s*?\\)\\.html\\(/), 'message: 确保你使用的是jQuery中的id选择器。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aed708826",
      "title": "Remove an Element Using jQuery",
      "description": [
        "现在让我们用jQuery来移除页面上的HTML元素吧.",
        "jQuery 有一个<code>.remove()</code> 的方法可以移除HTML元素",
        "试着使用<code>.remove()</code>方法来移除页面上的<code>target4</code>元素吧."
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"#target1\").css(\"color\", \"red\");",
        "    $(\"#target1\").prop(\"disabled\", true);",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert($(\"#target4\").length === 0, 'message: 使用jQuery来移除页面中的<code>target4</code>元素。');",
        "assert(code.match(/id=\"target4/g), 'message: 请使用jQuery来实现，而不是原生js。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aed608826",
      "title": "Use appendTo to Move Elements with jQuery",
      "description": [
        "现在让我们尝试把元素从一个<code>div</code>里移到另外一个<code>div</code>里。",
        "jQuery有一个<code>appendTo()</code>方法可以把选中的元素加到其他元素中。",
        "比如，你想让<code>target4</code>从我们的从<code>right-well</code>移到<code>left-well</code>，我们可以这样使用:",
        "<code>$(\"#target4\").appendTo(\"#left-well\");</code>",
        "来试着把<code>target2</code>元素从<code>left-well</code>移到<code>right-well</code>中。"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"#target1\").css(\"color\", \"red\");",
        "    $(\"#target1\").prop(\"disabled\", true);",
        "    $(\"#target4\").remove();",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert($(\"#left-well\").children(\"#target2\").length === 0, 'message: 你的 <code>target2</code> 元素不应该在 <code>left-well</code>里面。');",
        "assert($(\"#right-well\").children(\"#target2\").length > 0, 'message: 你的 <code>target2</code> 元素应该在 <code>right-well</code>里面。');",
        "assert(!code.match(/class.*animated/g), 'message: 请使用jQuery来实现，而不是原生js。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aed508826",
      "title": "Clone an Element Using jQuery",
      "description": [
        "除了移动元素，你还可以拷贝元素。简单理解：移动元素就是剪切，拷贝元素就是复制。",
        "jQuery的<code>clone()</code>方法可以拷贝元素。",
        "比如，如果我想把<code>target2</code>从<code>left-well</code>拷贝到<code>right-well</code>，我们可以这样写:",
        "<code>$(\"#target2\").clone().appendTo(\"#right-well\");</code>",
        "你有没有发现两个jQuery方法合在一起使用了？这就叫方法链<code>function chaining</code>，使用起来很方便。",
        "复制<code>target5</code>元素追加到<code>left-well</code>。",
        "<strong>提示：</strong>当你点击run tests后left-well会有两个#target5，千万别以为这是bug。实际上是因为编辑器中的代码会自动执行一次，点击run后会再执行一次，所以有两个#target5。"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"#target1\").css(\"color\", \"red\");",
        "    $(\"#target1\").prop(\"disabled\", true);",
        "    $(\"#target4\").remove();",
        "    $(\"#target2\").appendTo(\"#right-well\");",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert($(\"#right-well\").children(\"#target5\").length > 0, 'message: 你的<code>target5</code> 元素应该在 <code>right-well</code>里面。');",
        "assert($(\"#left-well\").children(\"#target5\").length > 0, 'message: 克隆的<code>target5</code> 元素也应该在 <code>left-well</code>里面。');",
        "assert(!code.match(/class.*animated/g), 'message: 请使用jQuery来实现，而不是原生js。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aed308826",
      "title": "Target the Parent of an Element Using jQuery",
      "description": [
        "每个HTML元素根据继承属性都有父<code>parent</code>元素。",
        "举个例子，<code>h3</code> 元素的父元素是 <code>&#60;div class=\"container-fluid\"&#62</code>，<code>&#60;div class=\"container-fluid\"&#62</code>的父元素是 <code>body</code>。",
        "jQuery有一个方法叫<code>parent()</code>，它允许你访问指定元素的父元素。",
        "举个例子：让<code>left-well</code> 元素的父元素<code>parent()</code>的背景色变成蓝色。",
        "<code>$(\"#left-well\").parent().css(\"background-color\", \"blue\")</code>",
        "试试让<code>#target1</code>元素的父元素的背景色变成红色。"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"#target1\").css(\"color\", \"red\");",
        "    $(\"#target1\").prop(\"disabled\", true);",
        "    $(\"#target4\").remove();",
        "    $(\"#target2\").appendTo(\"#right-well\");",
        "    $(\"#target5\").clone().appendTo(\"#left-well\");",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<body>",
        "  <div class=\"container-fluid\">",
        "    <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "    <div class=\"row\">",
        "      <div class=\"col-xs-6\">",
        "        <h4>#left-well</h4>",
        "        <div class=\"well\" id=\"left-well\">",
        "          <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "          <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "          <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "        </div>",
        "      </div>",
        "      <div class=\"col-xs-6\">",
        "        <h4>#right-well</h4>",
        "        <div class=\"well\" id=\"right-well\">",
        "          <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "          <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "          <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "        </div>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</body>"
      ],
      "tests": [
        "assert($(\"#left-well\").css(\"background-color\") === 'red' || $(\"#left-well\").css(\"background-color\") === 'rgb(255, 0, 0)' || $(\"#left-well\").css(\"background-color\").toLowerCase() === '#ff0000' || $(\"#left-well\").css(\"background-color\").toLowerCase() === '#f00', 'message: 你的<code>left-well</code> 元素应该有一个红色的背景。');",
        "assert(code.match(/\\.parent\\s*\\(\\)\\s*\\.css/g), 'message: 你应该使用<code>&#46;parent&#40;&#41;</code> 来修改这个元素。');",
        "assert(code.match(/\\$\\s*?\\(\\s*?(?:'|\")\\s*?#target1\\s*?(?:'|\")\\s*?\\)\\s*?\\.parent/gi), 'message: 你应该在 <code>&#35;target1</code> 元素上调用<code>&#46;parent&#40;&#41;</code>方法。');",
        "assert(code.match(/<div class=\"well\" id=\"left-well\">/g), 'message: 请使用jQuery来给元素添加css。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aed208826",
      "title": "Target the Children of an Element Using jQuery",
      "description": [
        "每个人都继承了自己的父母的一些属性，譬如：DNA、相貌、血型、体型等等，HTML也不例外。",
        "许多HTML元素都有<code>children</code>(子元素)，每个子元素都从父元素那里继承了一些属性。",
        "举个例子，每个HTML元素都是 <code>body</code> 的子元素， 你的 \"jQuery Playground\" <code>h3</code> 元素是 <code>&#60;div class=\"container-fluid\"&#62</code> 的子元素。",
        "jQuery有一个方法叫<code>children()</code>，它允许你访问指定元素的子元素。",
        "举个例子：让<code>left-well</code> 元素的子元素<code>children()</code>的文本颜色变成蓝色。",
        "<code>$(\"#left-well\").children().css(\"color\", \"blue\")</code>",
        "任务：让<code>#right-well</code>元素的所有子元素的文本颜色都变成橙色（orange）。"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"#target1\").css(\"color\", \"red\");",
        "    $(\"#target1\").prop(\"disabled\", true);",
        "    $(\"#target4\").remove();",
        "    $(\"#target2\").appendTo(\"#right-well\");",
        "    $(\"#target5\").clone().appendTo(\"#left-well\");",
        "    $(\"#target1\").parent().css(\"background-color\", \"red\");",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert($(\"#right-well\").children().css(\"color\") === 'rgb(255, 165, 0)', 'message: <code>#right-well</code> 的所有子元素的文本颜色都为橙色。');",
        "assert(code.match(/\\.children\\(\\)\\.css/g), 'message: 你应该使用 <code>children&#40&#41</code> 函数来修改这些元素。');",
        "assert(code.match(/<div class=\"well\" id=\"right-well\">/g), 'message: 请使用jQuery来给这些元素添加class。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aed108826",
      "title": "Target a Specific Child of an Element Using jQuery",
      "description": [
        "你已经看到了当用jQuery选择器通过id属性来选取元素的时候是多么方便，但是你不能总是写这么整齐的id。",
        "幸运的是，jQuery有一些另外的技巧可以达到同样的效果。",
        "jQuery 用CSS选择器来选取元素，<code>target:nth-child(n)</code> CSS选择器允许你按照索引顺序(从1开始)选择目标元素的所有子元素。",
        "示例：你可以给目标元素的第三个子元素添加bounce class。",
        "<code>$(\".target:nth-child(3)\").addClass(\"animated bounce\");</code>",
        "任务：确保给目标元素的第二个子元素添加animated和bounce class，你可以通过<code>target</code> class来选获得目标元素。"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"#target1\").css(\"color\", \"red\");",
        "    $(\"#target1\").prop(\"disabled\", true);",
        "    $(\"#target4\").remove();",
        "    $(\"#target2\").appendTo(\"#right-well\");",
        "    $(\"#target5\").clone().appendTo(\"#left-well\");",
        "    $(\"#target1\").parent().css(\"background-color\", \"red\");",
        "    $(\"#right-well\").children().css(\"color\", \"orange\");",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert($(\".target:nth-child(2)\").hasClass(\"animated\") && $(\".target:nth-child(2)\").hasClass(\"bounce\"), 'message: 第二个元素在你的 <code>target</code> 在你的目标元素中应该 bounce。');",
        "assert(code.match(/\\:nth-child\\(/g), 'message: 你应该使用 <code>&#58;nth-child&#40&#41</code> 这些功能来修改这些元素。');",
        "assert(code.match(/<button class=\"btn btn-default target\" id=\"target2\">/g), 'message: 只使用 jQuery 来添加这些 class 到元素中。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aed008826",
      "title": "Target Even Numbered Elements Using jQuery",
      "description": [
        "示例：获取class为<code>target</code>且索引为奇数的所有元素，并给他们添加class。",
        "<code>$(\".target:odd\").addClass(\"animated shake\");</code>",
        "记住，jQuery里的索引是从0开始的，也就是说：<code>:odd</code> 选择第2、4、6个元素，因为target#2(索引为1)，target#4(索引为3)，target6(索引为5。",
        "任务：获取class为<code>target</code>且索引为偶数的所有元素，也就是target#1(索引为0)，target#3(索引为2)，target5(索引为4)，并给它们添加class <code>animated</code> 和 <code>shake</code>。"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"#target1\").css(\"color\", \"red\");",
        "    $(\"#target1\").prop(\"disabled\", true);",
        "    $(\"#target4\").remove();",
        "    $(\"#target2\").appendTo(\"#right-well\");",
        "    $(\"#target5\").clone().appendTo(\"#left-well\");",
        "    $(\"#target1\").parent().css(\"background-color\", \"red\");",
        "    $(\"#right-well\").children().css(\"color\", \"orange\");",
        "    $(\"#left-well\").children().css(\"color\", \"green\");",
        "    $(\".target:nth-child(2)\").addClass(\"animated bounce\");",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert($('.target:even').hasClass('animated') && $('.target:even').hasClass('shake'), 'message: 所有 <code>target</code> 元素的偶数都应该 <code>shake</code>');",
        "assert(code.match(/\\:even/g), 'message: 你应该使用 <code>&#58;even</code> 功能来更改这些元素。');",
        "assert(code.match(/<button class=\"btn btn-default target\" id=\"target3\">/g), 'message: 只使用 jQuery 来添加这些 class 到元素中。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "bad87fee1348bd9aecb08826",
      "title": "Use jQuery to Modify the Entire Page",
      "description": [
        "我们已经玩了这么久的jQuery游乐场，是时候结束这一节了。",
        "我们让整个body都有淡出效果(fadeOut)： <code> $(\"body\").addClass(\"animated fadeOut\");</code>",
        "让我们做一些更为激动人心的事情，给body添加class <code>animated</code> 和<code>hinge</code> 。"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"#target1\").css(\"color\", \"red\");",
        "    $(\"#target1\").prop(\"disabled\", true);",
        "    $(\"#target4\").remove();",
        "    $(\"#target2\").appendTo(\"#right-well\");",
        "    $(\"#target5\").clone().appendTo(\"#left-well\");",
        "    $(\"#target1\").parent().css(\"background-color\", \"red\");",
        "    $(\"#right-well\").children().css(\"color\", \"orange\");",
        "    $(\"#left-well\").children().css(\"color\", \"green\");",
        "    $(\".target:nth-child(2)\").addClass(\"animated bounce\");",
        "    $(\".target:even\").addClass(\"animated shake\");",
        "",
        "  });",
        "fcces",
        "",
        "<!-- 请只修改这条注释以上的代码 -->",
        "",
        "<div class=\"container-fluid\">",
        "  <h3 class=\"text-primary text-center\">jQuery Playground</h3>",
        "  <div class=\"row\">",
        "    <div class=\"col-xs-6\">",
        "      <h4>#left-well</h4>",
        "      <div class=\"well\" id=\"left-well\">",
        "        <button class=\"btn btn-default target\" id=\"target1\">#target1</button>",
        "        <button class=\"btn btn-default target\" id=\"target2\">#target2</button>",
        "        <button class=\"btn btn-default target\" id=\"target3\">#target3</button>",
        "      </div>",
        "    </div>",
        "    <div class=\"col-xs-6\">",
        "      <h4>#right-well</h4>",
        "      <div class=\"well\" id=\"right-well\">",
        "        <button class=\"btn btn-default target\" id=\"target4\">#target4</button>",
        "        <button class=\"btn btn-default target\" id=\"target5\">#target5</button>",
        "        <button class=\"btn btn-default target\" id=\"target6\">#target6</button>",
        "      </div>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert($('body').hasClass('animated') && $('body').hasClass('hinge'), 'message: 添加 <code>animated</code> 和 <code>hinge</code> 到你的 <code>body</code> 元素内。');"
      ],
      "type": "waypoint",
      "challengeType": 0
    }
  ]
}
