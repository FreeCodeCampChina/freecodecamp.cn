{
  "name": "JSON APIs and Ajax",
  "order": 10,
  "time": "2 hours",
  "helpRoom": "Help",
  "challenges": [
    {
      "id": "56bbb991ad1ed5201cd392d4",
      "title": "Trigger Click Events with jQuery",
      "description": [
        "通过jQuery来绑定点击事件。",
        "首先，我们来看一下函数 <code>$(document).ready()</code> 干了些什么。",
        "这个函数中的代码只会在我们的页面加载时候运行一次，确保执行js之前页面所有的dom已经准备就绪。",
        "任务：给\"Get Message\"按钮绑定一个点击事件。",
        "我们先在<code>$(document).ready()</code>函数中增加一个<code>click</code>事件。代码如下：<code>$(document).ready()</code> function by adding this code:",
        "<blockquote>$(\"#getMessage\").on(\"click\", function(){</br></br>});</blockquote>"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    // 请把你的代码写在这条注释以下",
        "    ",
        "    // 请把你的代码写在这条注释以上",
        "  });",
        "fcces",
        "",
        "",
        "<div class=\"container-fluid\">",
        "  <div class = \"row text-center\">",
        "    <h2>Cat Photo Finder</h2>",
        "  </div>",
        "  <div class = \"row text-center\">",
        "    <div class = \"col-xs-12 well message\">",
        "      The message will go here",
        "    </div>",
        "  </div>",
        "  <div class = \"row text-center\">",
        "    <div class = \"col-xs-12\">",
        "      <button id = \"getMessage\" class = \"btn btn-primary\">",
        "        Get Message",
        "      </button>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/\\$\\s*?\\(\\s*?(?:'|\")\\#getMessage(?:'|\")\\s*?\\)\\s*?\\.on\\s*?\\(\\s*?(?:'|\")click(?:'|\")\\s*?\\,\\s*?function\\s*?\\(\\s*?\\)\\s*?\\{/gi), 'message: Bind the click event to the button with the ID of <code>getMessage</code>');",
        "assert(code.match(/\\n*?\\s*?\\}\\n*?\\s*?\\);/gi) && code.match(/\\n*?\\s*?\\}\\);/gi).length >= 2, 'message: Be sure to close your functions with <code>}&#41;;</code>');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "56bbb991ad1ed5201cd392d5",
      "title": "Change Text with Click Events",
      "description": [
        "通过点击事件来更改文本。",
        "当我们点击按钮时，我们可以更新HTML页面",
        "任务：点击\"Get Message\"按钮，将class为<code>message</code> 的元素的文本改为：“Here is the message”。",
        "为此在我们的点击事件中加入如下代码：",
        "<code>$(\".message\").html(\"Here is the message\");</code>"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "    $(\"#getMessage\").on(\"click\", function(){",
        "      // 请把你的代码写在这条注释以下",
        "      ",
        "      // 请把你的代码写在这条注释以上",
        "    });",
        "  });",
        "fcces",
        "",
        "",
        "<div class=\"container-fluid\">",
        "  <div class = \"row text-center\">",
        "    <h2>Cat Photo Finder</h2>",
        "  </div>",
        "  <div class = \"row text-center\">",
        "    <div class = \"col-xs-12 well message\">",
        "      The message will go here",
        "    </div>",
        "  </div>",
        "  <div class = \"row text-center\">",
        "    <div class = \"col-xs-12\">",
        "      <button id = \"getMessage\" class = \"btn btn-primary\">",
        "        Get Message",
        "      </button>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/\\$\\s*?\\(\\s*?(?:'|\")\\.message(?:'|\")\\s*?\\)\\s*?(\\.html|\\.text)\\s*?\\(\\s*?(?:'|\")Here\\sis\\sthe\\smessage(?:'|\")\\s*?\\);/gi), 'message: Clicking the \"Get Message\" button should give the element with the class <code>message</code> the text \"Here is the message\".');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "56bbb991ad1ed5201cd392d6",
      "title": "Get JSON with the jQuery getJSON Method",
      "description": [
        "当你需要根据服务器返回的数据来动态改变页面的时候，应用程序接口(API)就派上用场了。",
        "记住，API——应用程序接口(Application Programming Interface)是计算机之间相互交流沟通的工具。",
        "许多网站的应用程序接口(API)都是通过一种称为JSON格式的数据来传输的，JSON 是 JavaScript Object Notation的简写。",
        "其实如果你曾经创建过JS对象的话，你就已经使用了这种数据格式，JSON是一种非常简洁的数据格式。",
        "它通常表现为了两种形式，一种为单个对象，一种为多个对象",
        "单个对象类似于：<br><code>{name:'盖伦',advantage:'单挑无敌'}</code>",
        "多个对象类似于：<br><code>[{name:'盖伦',advantage:'单挑无敌'},{name:'诺克',advantage:'上单霸主'}]</code>",
        "每个对象属性和属性值的组合就是我们经常听到的\"键值对(key-value pairs)\"。",
        "让我们从之前的猫图API拿取数据吧。",
        "你应该在你的点击事件中加入如下的代码：",
        "<blockquote>$.getJSON(\"/json/cats.json\", function(json) {</code></br>  $(\".message\").html(JSON.stringify(json));</br>});</blockquote>",
        "在这之后，点击\"Get Message\"按钮。你的Ajax函数将把文字\"The message will go here\"替换成此从FreeCodeCam的猫图API中获得的原始JSON数据。"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "",
        "    $(\"#getMessage\").on(\"click\", function(){",
        "      // 请把你的代码写在这条注释以下",
        "      ",
        "      ",
        "      ",
        "      // 请把你的代码写在这条注释以上",
        "    });",
        "",
        "  });",
        "fcces",
        "",
        "<div class=\"container-fluid\">",
        "  <div class = \"row text-center\">",
        "    <h2>Cat Photo Finder</h2>",
        "  </div>",
        "  <div class = \"row text-center\">",
        "    <div class = \"col-xs-12 well message\">",
        "      The message will go here",
        "    </div>",
        "  </div>",
        "  <div class = \"row text-center\">",
        "    <div class = \"col-xs-12\">",
        "      <button id = \"getMessage\" class = \"btn btn-primary\">",
        "        Get Message",
        "      </button>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/\\$\\s*?\\(\\s*?(\\\"|\\')\\#getMessage(\\\"|\\')\\s*?\\)\\s*?\\.\\s*?on\\s*?\\(\\s*?(\\\"|\\')click(\\\"|\\')\\s*?\\,\\s*?function\\s*?\\(\\s*?\\)\\s*?\\{/gi), 'message: You should have a click handler on the getMessage button to trigger the AJAX request.');",
        "assert(code.match(/\\s*?\\}\\s*?\\)\\s*?\\;/gi), 'message: You should have at least one closing set of brackets and parenthesis.');",
        "assert(code.match(/\\s*?\\}\\s*?\\)\\s*?\\;/gi) && code.match(/\\,\\s*?function\\s*?\\(\\s*?\\w*?\\s*?\\)\\s*?\\{/gi) && code.match(/\\s*?\\}\\s*?\\)\\s*?\\;/gi).length === code.match(/\\s*?function\\s*?\\(\\s*?\\w*?\\s*?\\)\\s*?\\{/gi).length, 'message: Each callback function should have a closing set of brackets and parenthesis.');",
        "assert(code.match(/\\$\\s*?\\.\\s*?getJSON\\s*?\\(\\s*?(\\\"|\\')\\/json\\/cats\\.json(\\\"|\\')\\s*?\\,\\s*?function\\s*?\\(\\s*?json\\s*?\\)\\s*?\\{/gi), 'message: You should be making use of the getJSON method given in the description to load data from the json file.');",
        "assert(code.match(/\\$\\s*?\\(\\s*?(\\\"|\\')\\.message(\\\"|\\')\\s*?\\)\\s*?\\.\\s*?html\\s*?\\(\\s*?JSON\\s*?\\.\\s*?stringify\\s*?\\(\\s*?json\\s*?\\)\\s*?\\)/gi), 'message: Don&apos;t forget to make the <code>.html</code> change the contents of the message box so that it contains the result of the getJSON.');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "56bbb991ad1ed5201cd392d7",
      "title": "Convert JSON Data to HTML",
      "description": [
        "好了，我们已经从JSON API中获得了数据，现在把它们展现到我们的HTML页面中吧。",
        "这里，我们使用<code>.forEach()</code>函数来循环遍历JSON数据写到htmll变量中。",
        "首先我们定义一个HTML变量，<br><code>var html = \"\";</code> 。",
        "然后，我们使用<code>.forEach()</code>函数来循环遍历JSON数据写到html变量中，最后把html变量显示到我们的页面中。",
        "整个过程的代码如下：",
        "<blockquote>json.forEach(function(val) {</br>  var keys = Object.keys(val);</br>  html += \"&lt;div class = 'cat'&gt;\";</br>  keys.forEach(function(key) {</br>    html += \"&lt;b&gt;\" + key + \"&lt;/b&gt;: \" + val[key] + \"&lt;br&gt;\";</br>  });</br>  html += \"&lt;/div&gt;&lt;br&gt;\";</br>});</blockquote>",
        "提示：示例中难点在于两个forEach循环，而且里面夹杂有字符串拼接，这是最头疼也最容易出错的地方。"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "",
        "    $(\"#getMessage\").on(\"click\", function() {",
        "      $.getJSON(\"/json/cats.json\", function(json) {",
        "",
        "        var html = \"\";",
        "        // 请把你的代码写在这条注释以下",
        "        ",
        "        ",
        "        ",
        "        // 请把你的代码写在这条注释以上",
        "",
        "        $(\".message\").html(html);",
        "",
        "      });",
        "    });",
        "  });",
        "fcces",
        "",
        "<div class=\"container-fluid\">",
        "  <div class = \"row text-center\">",
        "    <h2>Cat Photo Finder</h2>",
        "  </div>",
        "  <div class = \"row text-center\">",
        "    <div class = \"col-xs-12 well message\">",
        "      The message will go here",
        "   </div>",
        "  </div>",
        "  <div class = \"row text-center\">",
        "    <div class = \"col-xs-12\">",
        "      <button id = \"getMessage\" class = \"btn btn-primary\">",
        "        Get Message",
        "      </button>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/json\\.forEach/gi), 'message: The message box should have something in it.');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "56bbb991ad1ed5201cd392d8",
      "title": "Render Images from Data Sources",
      "description": [
        "从上节课获得的JSON数组中，每个对象都包含了一个以<code>imageLink</code>为键(key)，以猫的图片的url为值(value)的键值对。",
        "当我们在遍历这些对象时，我们用<code>imageLink</code>的属性来显示<code>img</code>元素的图片。",
        "代码如下：",
        "<code>html += \"&lt;img src = '\" + val.imageLink + \"'&gt;\";</code>"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "",
        "    $(\"#getMessage\").on(\"click\", function() {",
        "      $.getJSON(\"/json/cats.json\", function(json) {",
        "",
        "        var html = \"\";",
        "",
        "        json.forEach(function(val) {",
        "",
        "          html += \"<div class = 'cat'>\";",
        "",
        "          // 请把你的代码写在这条注释以下",
        "          ",
        "          ",
        "          ",
        "          // 请把你的代码写在这条注释以上",
        "",
        "          html += \"</div>\";",
        "",
        "        });",
        "",
        "        $(\".message\").html(html);",
        "",
        "      });",
        "    });",
        "  });",
        "fcces",
        "",
        "<div class=\"container-fluid\">",
        "  <div class = \"row text-center\">",
        "    <h2>Cat Photo Finder</h2>",
        "  </div>",
        "  <div class = \"row text-center\">",
        "    <div class = \"col-xs-12 well message\">",
        "      The message will go here",
        "    </div>",
        "  </div>",
        "  <div class = \"row text-center\">",
        "    <div class = \"col-xs-12\">",
        "      <button id = \"getMessage\" class = \"btn btn-primary\">",
        "        Get Message",
        "      </button>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/val.imageLink/gi), 'message: You should have used the <code>imageLink</code> property to display the images.');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "56bbb991ad1ed5201cd392d9",
      "title": "Prefilter JSON",
      "description": [
        "如果我们不想把所有从JSON API中得到的图片都展现出来，我们可以在遍历之前做一次过滤。",
        "我们把其中 \"id\" 键的值为1的图片过滤掉。",
        "代码如下:",
        "<blockquote>json = json.filter(function(val) {</br>  return (val.id !== 1);</br>});</blockquote>"
      ],
      "challengeSeed": [
        "fccss",
        "  $(document).ready(function() {",
        "",
        "    $(\"#getMessage\").on(\"click\", function() {",
        "      $.getJSON(\"/json/cats.json\", function(json) {",
        "",
        "        var html = \"\";",
        "",
        "        // 请把你的代码写在这条注释以下",
        "        ",
        "        ",
        "        ",
        "        // 请把你的代码写在这条注释以上",
        "",
        "        json.forEach(function(val) {",
        "",
        "          html += \"<div class = 'cat'>\"",
        "",
        "          html += \"<img src = '\" + val.imageLink + \"'>\"",
        "",
        "          html += \"</div>\"",
        "",
        "        });",
        "",
        "        $(\".message\").html(html);",
        "",
        "      });",
        "    });",
        "  });",
        "fcces",
        "",
        "<div class=\"container-fluid\">",
        "  <div class = \"row text-center\">",
        "    <h2>Cat Photo Finder</h2>",
        "  </div>",
        "  <div class = \"row text-center\">",
        "    <div class = \"col-xs-12 well message\">",
        "      The message will go here",
        "    </div>",
        "  </div>",
        "  <div class = \"row text-center\">",
        "    <div class = \"col-xs-12\">",
        "      <button id = \"getMessage\" class = \"btn btn-primary\">",
        "        Get Message",
        "      </button>",
        "    </div>",
        "  </div>",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/filter/gi), 'message: You should be making use of the .filter method.');"
      ],
      "type": "waypoint",
      "challengeType": 0
    },
    {
      "id": "56bbb991ad1ed5201cd392da",
      "title": "Get Geo-location Data",
      "description": [
        "Another cool thing we can do is access our user's current location. Every browser has a built in navigator that can give us this information.",
        "The navigator will get our user's current longitude and latitude.",
        "You will see a prompt to allow or block this site from knowing your current location. The challenge can be completed either way, as long as the code is correct.",
        "By selecting allow you will see the text on the output phone change to your latitude and longitude",
        "Here's some code that does this:",
        "<blockquote>if (navigator.geolocation) {</br>  navigator.geolocation.getCurrentPosition(function(position) {</br>    $(\"#data\").html(\"latitude: \" + position.coords.latitude + \"&lt;br&gt;longitude: \" + position.coords.longitude);</br>  });</br>}</blockquote>"
      ],
      "description": [
        "我们还可以通过浏览器<code>navigator</code>获得我们当前所在的位置<code>geolocation</code>。",
        "位置的信息包括经度<code>longitude</code>和纬度<code>latitude</code>。",
        "你将会看到一个是否允许获取当前位置的提示。不管你选择允许或者禁止，只要代码正确，这关就能过了。",
        "如果你选择允许，你将会看到右侧手机输出的文字为你当前所在位置的经纬度。",
        "代码如下：",
        "<blockquote>if (navigator.geolocation) {</br>  navigator.geolocation.getCurrentPosition(function(position) {</br>    $(\"#data\").html(\"latitude: \" + position.coords.latitude + \"&lt;br&gt;longitude: \" + position.coords.longitude);</br>  });</br>}</blockquote>"
      ],
      "challengeSeed": [
        "fccss",
        "  // 请把你的代码写在这条注释以下",
        "  ",
        "  ",
        "  ",
        "  // 请把你的代码写在这条注释以上",
        "fcces",
        "<div id = \"data\">",
        "  <h4>You are here:</h4>",
        "  ",
        "</div>"
      ],
      "tests": [
        "assert(code.match(/navigator\\.geolocation\\.getCurrentPosition/gi), 'message: You should make use of the <code>navigator.geolocation</code> to access the users current location.');"
      ],
      "type": "waypoint",
      "challengeType": 0
    }
  ]
}
